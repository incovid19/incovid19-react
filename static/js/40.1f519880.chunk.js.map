{"version":3,"sources":["components/VaccinationHeader.js","../node_modules/fast-deep-equal/index.js"],"names":["ProgressBar","dose1","dose2","t","useTranslation","useState","highlightedDose","setHighlightedDose","isMounted","useRef","doseSpring","useSpring","from","delay","current","useEffect","className","style","animationDelay","classnames","highlighted","div","width","to","n","onMouseEnter","bind","this","onMouseLeave","marginLeft","span","formatNumber","Level","data","spring","total","getStatistic","config","SPRING_CONFIG_NUMBERS","statisticConfig","STATISTIC_CONFIGS","vaccinated","displayName","VaccinationHeader","normalizedByPopulationPer","Globals","assign","colors","isEqual","prevProps","currProps","equal","memo","module","exports","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key"],"mappings":"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","file":"static/js/40.1f519880.chunk.js","sourcesContent":["import {SPRING_CONFIG_NUMBERS, STATISTIC_CONFIGS} from '../constants.js';\nimport {formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport {ShieldCheckIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport {useEffect, useRef, useState, memo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring, Globals} from 'react-spring';\n\n// Disable react-spring color string interpolation\n// It renders administered => administergba(255, 0, 0, 1)\nGlobals.assign({colors: null});\n\nfunction ProgressBar({dose1, dose2}) {\n  const {t} = useTranslation();\n  const [highlightedDose, setHighlightedDose] = useState(2);\n  const isMounted = useRef(false);\n\n  const doseSpring = useSpring({\n    dose1,\n    dose2,\n    from: {\n      dose1: 0,\n      dose2: 0,\n    },\n    delay: isMounted.current ? 0 : 2000,\n  });\n\n  useEffect(() => {\n    isMounted.current = true;\n  }, []);\n\n  return (\n    <div\n      className=\"progress-bar-wrapper fadeInUp\"\n      style={{animationDelay: `${750 + 5 * 250}ms`}}\n    >\n      <div\n        className={classnames('legend', {highlighted: highlightedDose === 1})}\n      >\n        <div className=\"label-wrapper\">\n          <animated.div\n            style={{width: doseSpring.dose1.to((n) => `calc(${n}% - 3rem)`)}}\n          />\n          <div\n            className=\"label\"\n            onMouseEnter={setHighlightedDose.bind(this, 1)}\n            onMouseLeave={setHighlightedDose.bind(this, 2)}\n          >\n            {t('At least one dose')}\n          </div>\n        </div>\n        <animated.div\n          className=\"arrow\"\n          style={{\n            marginLeft: doseSpring.dose1.to((n) => `calc(${n}% - 0.3ch)`),\n          }}\n        >\n          |\n        </animated.div>\n      </div>\n      <div className=\"progress-bar\">\n        <animated.div\n          className={classnames('progress-bar', 'value', {\n            highlighted: highlightedDose === 1,\n          })}\n          style={{width: doseSpring.dose1.to((n) => `${n}%`)}}\n          onMouseEnter={setHighlightedDose.bind(this, 1)}\n          onMouseLeave={setHighlightedDose.bind(this, 2)}\n        >\n          <animated.span>\n            {doseSpring.dose1.to((n) => formatNumber(n, '%'))}\n          </animated.span>\n        </animated.div>\n        <animated.div\n          className={classnames('progress-bar', 'value', 'opaque', {\n            highlighted: highlightedDose === 2,\n          })}\n          style={{width: doseSpring.dose2.to((n) => `${n}%`)}}\n        />\n      </div>\n      {dose2 > 0 && (\n        <div\n          className={classnames('legend', {\n            highlighted: highlightedDose === 2,\n          })}\n        >\n          <animated.div\n            className=\"arrow\"\n            style={{\n              marginLeft: doseSpring.dose2.to((n) => `calc(${n}% - 0.3ch)`),\n            }}\n          >\n            |\n          </animated.div>\n          <div className=\"label-wrapper\">\n            <animated.div\n              style={{\n                width: doseSpring.dose2.to((n) => `calc(${n}% - 4rem)`),\n              }}\n            />\n            <animated.div className=\"label\">\n              {doseSpring.dose2.to(\n                (n) => `${t('Fully vaccinated')} (${formatNumber(n, '%')})`\n              )}\n            </animated.div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction Level({data}) {\n  const {t} = useTranslation();\n\n  const spring = useSpring({\n    total: getStatistic(data, 'total', 'vaccinated'),\n    // delta: getStatistic(data, 'delta', 'vaccinated'),\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  const statisticConfig = STATISTIC_CONFIGS.vaccinated;\n\n  return (\n    <div\n      className=\"level-vaccinated fadeInUp\"\n      style={{animationDelay: `${750 + 4 * 250}ms`}}\n    >\n      <ShieldCheckIcon />\n      <animated.div>\n        {spring.total.to((total) => formatNumber(total, 'long'))}\n      </animated.div>\n      {/* <animated.div>\n        {spring.delta.to(\n          (delta) =>\n            `(+ ${formatNumber(delta, 'long')})`\n        )}\n      </animated.div> */}\n      <div>{t(statisticConfig.displayName)}</div>\n    </div>\n  );\n}\n\nfunction VaccinationHeader({data}) {\n  const dose1 = getStatistic(data, 'total', 'vaccinated1', {\n    normalizedByPopulationPer: 'hundred',\n  });\n  const dose2 = getStatistic(data, 'total', 'vaccinated2', {\n    normalizedByPopulationPer: 'hundred',\n  });\n\n  return (\n    <div className=\"VaccinationHeader\">\n      <Level {...{data}} />\n      <ProgressBar {...{dose1, dose2}} />\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data, currProps.data)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(VaccinationHeader, isEqual);\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}