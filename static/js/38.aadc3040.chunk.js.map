{"version":3,"sources":["hooks/useIsVisible.js","components/State.js"],"names":["OPTIONS","root","rootMargin","threshold","useIsVisible","elementRef","useState","isVisible","setIsVisible","useEffect","current","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","unobserve","observe","DeltaBarGraph","lazy","retry","Footer","Level","VaccinationHeader","MapExplorer","MapSwitcher","Minigraphs","StateHeader","StateMeta","TimeseriesExplorer","State","t","useTranslation","stateCode","useParams","toUpperCase","useSessionStorage","mapStatistic","setMapStatistic","showAllDistricts","setShowAllDistricts","districtName","regionHighlighted","setRegionHighlighted","delta7Mode","setDelta7Mode","useSWR","DATA_API_ROOT","fetcher","revalidateOnMount","refreshInterval","timeseries","data","timeseriesResponseError","error","stateData","scatter","json","margin","currentdate","lastUpdated","separator","newDate","Date","month","toLocaleString","date","getDate","getCurrentDate","d3","selectAll","remove","select","append","attr","html","svg","width","strokeWidth","height","y","scale","linear","range","x","xAxis","axis","ticks","tickFormat","d","prefix","formatPrefix","symbol","orient","yAxis","tooltip","Error","domain","call","text","enter","Vaccine1","Vaccine2","color","i","Math","floor","random","getRandomColor","on","style","display","padding","opacity","tipsize","parseInt","top","event","pageY","left","pageX","Name","count1","count2","details","includes","obj","meta","population","total","vaccinated1","vaccinated2","STATE_NAMES","toFixed","push","Object","keys","districts","district","vaccine1","vaccine2","gridRowCount","useMemo","gridColumnCount","window","innerWidth","districtCount","filter","length","ceil","stateMetaElement","useRef","isStateMetaVisible","trail","styles","map","element","index","animationDelay","lookback","lastDataDate","updatedDates","tested","vaccinated","formatISO","max","parseIndiaDate","representation","primaryStatistic","MAP_STATISTICS","noDistrictData","UNKNOWN_DISTRICT_KEY","PRIMARY_STATISTICS","every","statistic","getStatistic","statisticConfig","STATISTIC_CONFIGS","noRegionHighlightedDistrictData","hasPrimary","name","content","className","position","dates","forceRender","fallback","minHeight","ref","classnames","expanded","gridTemplateRows","sort","a","b","districtNameA","districtNameB","districtA","districtB","handleSort","slice","undefined","delta","formatNumber","onClick","flexBasis","id","lassName","memo"],"mappings":"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","file":"static/js/38.aadc3040.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n\nconst OPTIONS = {\n  root: null,\n  rootMargin: '0px 0px 0px 0px',\n  threshold: 0,\n};\n\nconst useIsVisible = (elementRef) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    if (elementRef.current) {\n      const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n            observer.unobserve(elementRef.current);\n          }\n        });\n      }, OPTIONS);\n      observer.observe(elementRef.current);\n    }\n  }, [elementRef]);\n\n  return isVisible;\n};\n\nexport default useIsVisible;\n","import {\n  DATA_API_ROOT,\n  MAP_STATISTICS,\n  PRIMARY_STATISTICS,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {\n  fetcher,\n  formatNumber,\n  getStatistic,\n  parseIndiaDate,\n  retry,\n} from '../utils/commonFunctions';\n\nimport {SmileyIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {formatISO, max} from 'date-fns';\nimport {\n  memo,\n  useMemo,\n  useState,\n  useEffect,\n  lazy,\n  Suspense,\n  useRef,\n} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport {useSessionStorage} from 'react-use';\nimport useSWR from 'swr';\n\nconst DeltaBarGraph = lazy(() => retry(() => import('./DeltaBarGraph')));\nconst Footer = lazy(() => retry(() => import('./Footer')));\nconst Level = lazy(() => retry(() => import('./Level')));\nconst VaccinationHeader = lazy(() =>\n  retry(() => import('./VaccinationHeader'))\n);\nconst MapExplorer = lazy(() => retry(() => import('./MapExplorer')));\nconst MapSwitcher = lazy(() => retry(() => import('./MapSwitcher')));\nconst Minigraphs = lazy(() => retry(() => import('./Minigraphs')));\nconst StateHeader = lazy(() => retry(() => import('./StateHeader')));\nconst StateMeta = lazy(() => retry(() => import('./StateMeta')));\nconst TimeseriesExplorer = lazy(() =>\n  retry(() => import('./TimeseriesExplorer'))\n);\n\nfunction State() {\n  const {t} = useTranslation();\n\n  const stateCode = useParams().stateCode.toUpperCase();\n\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'active'\n  );\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: stateCode,\n    districtName: null,\n  });\n  const [delta7Mode, setDelta7Mode] = useState(false);\n\n  const {data: timeseries, error: timeseriesResponseError} = useSWR(\n    `${DATA_API_ROOT}/timeseries-${stateCode}.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n    }\n  );\n\n  const {data} = useSWR(`${DATA_API_ROOT}/data.min.json`, fetcher, {\n    revalidateOnMount: true,\n    refreshInterval: 100000,\n  });\n\n  const stateData = data?.[stateCode];\n\n  const scatter = (json) => {\n    const margin = {top: 60, left: 35, bottom: 40, right: 50};\n    const heightValue = 300;\n    const widthValue = 600;\n    const getCurrentDate = (lastUpdated, separator = ' ') => {\n      const newDate = new Date(lastUpdated);\n\n      const month = newDate.toLocaleString('default', {month: 'long'});\n      const date = newDate.getDate();\n\n      return `${date < 10 ? `0${date}` : `${date}`}${separator}${month}`;\n    };\n    const currentdate = getCurrentDate(json[0]?.Date);\n    /*\n     * The next block of code selects the id scatterplot-stats on the web page\n     * and appends an svg object to it of the size\n     * that we have set up with our width, height and margin’s.\n     */\n    d3.selectAll('#scatterplot-stats').selectAll('svg').remove();\n    d3.selectAll('#scatterplot-stats').selectAll('#date').remove();\n    d3.select('#scatterplot-stats')\n      .append('div')\n      .attr('id', 'date')\n      .attr('class', 'graphtext')\n      .html(`${currentdate}`);\n    let svg = d3\n      .select('#scatterplot-stats')\n      .append('svg')\n      .attr('viewBox', `0 0 ${widthValue} ${heightValue}`);\n\n    const strokeWidth = 1.5;\n\n    const width = widthValue - margin.left - margin.right - strokeWidth * 2;\n    const height = heightValue - margin.top - margin.bottom;\n\n    const y = d3.scale.linear().range([height, 0]);\n    const x = d3.scale.linear().range([0, width]);\n\n    // let prefix = d3.formatPrefix(1.21e9);\n    const xAxis = d3.svg\n      .axis()\n      .scale(x)\n      .ticks(6)\n      .tickFormat(function (d) {\n        const prefix = d3.formatPrefix(d);\n        return prefix.scale(d) + prefix.symbol;\n      })\n      .orient('bottom');\n\n    const yAxis = d3.svg\n      .axis()\n      .scale(y)\n      .orient('right')\n      .ticks(6)\n      .tickFormat(function (d) {\n        const prefix = d3.formatPrefix(d);\n        return prefix.scale(d) + prefix.symbol;\n      });\n\n    svg\n      .append('rect')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('fill', '#E3E2F3')\n      .attr('rx', 4)\n      .attr('fill-opacity', 1);\n    // It also adds a g element that provides a reference point for adding our axes.\n    svg = svg\n      .append('g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    const tooltip = d3\n      .select('#scatterplot-stats')\n      .append('div')\n      .attr('class', 'tooltip');\n\n    // function getColor(arg) {\n    //   return getRandomColor()\n    // }\n\n    function getRandomColor() {\n      const letters = '0123456789ABCDEF';\n      let color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    }\n\n    /*\n     * this function is like mouse over.\n     * If we place the mouse over a circle the tooltip is going to show up.\n     */\n    function showToolTip(d, i) {\n      tooltip.style({\n        display: 'block',\n        height: '80px',\n        width: '200px',\n        padding: '5px',\n        opacity: 1,\n        'background-color': d.color,\n      });\n\n      const tipsize = {\n        dx: parseInt(tooltip.style('width')),\n        dy: parseInt(tooltip.style('height')),\n      };\n\n      tooltip\n        .style({\n          top: d3.event.pageY - tipsize.dy - 5 + 'px',\n          left: d3.event.pageX - tipsize.dx + 100 + 'px',\n        })\n        .html(\n          '<span><b>' +\n            d.Name +\n            '<br/>' +\n            'Vaccine Dose 1: ' +\n            d.Vaccine1 +\n            '% <br/>' +\n            'Vaccine Dose 2: ' +\n            d.Vaccine2 +\n            '%<br/>' +\n            'Total Vaccinations: ' +\n            (d.count1 + d.count2)\n        );\n    }\n\n    /*\n     * This function is like mouse out.\n     * If we mouse out then the tooltip is hidding\n     */\n    function hideToolTip(d, i) {\n      tooltip.style({\n        display: 'none',\n      });\n    }\n\n    /*\n     * d3.json takes the variable url and two more parameters\n     * if error, then throw it\n     * else map the time-date in the horizontal axis and the rank-position in the verticall axis\n     */\n    // d3.json(json, (error, data) => {\n    const data = json;\n    if (!data) {\n      throw new Error('d3.json error');\n    } else {\n      x.domain([0, 100]);\n      y.domain([0, 100]);\n\n      svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .append('text')\n        .attr('fill', 'red')\n        .attr('transform', 'translate(' + width + ',-30)')\n        .attr('dy', '4.5em')\n        .attr('text-anchor', 'end')\n        .text('Vaccine Dose 1 %');\n\n      svg\n        .append('g')\n        .attr('class', 'y axis')\n        .attr('transform', 'translate(' + width + ', 0)')\n        .call(yAxis)\n        .append('text')\n        .attr('transform', 'rotate(0)')\n        .attr('dy', '-0.8em')\n        .attr('text-anchor', 'end')\n        .text('Vaccine Dose 2 %');\n\n      const districts = svg\n        .selectAll('.vac-sc-plot')\n        .data(data)\n        .enter()\n        .append('g')\n        .attr('class', 'vac-sc-plot')\n        .attr('x', (d) => {\n          return x(d.Vaccine1);\n        })\n        .attr('y', (d) => {\n          return y(d.Vaccine2);\n        });\n\n      districts\n        .append('circle')\n        .attr('cx', (d) => {\n          return x(d.Vaccine1);\n        })\n        .attr('cy', (d) => {\n          return y(d.Vaccine2);\n        })\n        .attr('r', 5)\n        .attr('fill', (d) => {\n          const color = getRandomColor();\n          d.color = color;\n          return color;\n        })\n        .on('mouseover', showToolTip)\n        .on('mouseout', hideToolTip);\n    }\n  };\n\n  useEffect(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted({\n        stateCode: stateCode,\n        districtName: null,\n      });\n      setShowAllDistricts(false);\n    }\n    if (data?.[stateCode]) {\n      const details = [];\n      const noPopulation = ['DL', 'LA'];\n      if (noPopulation.includes(stateCode)) {\n        const obj = {};\n        if (\n          data[stateCode]?.meta?.population &&\n          data[stateCode]?.total?.vaccinated1 &&\n          data[stateCode]?.total?.vaccinated2\n        ) {\n          obj.Name = STATE_NAMES[stateCode];\n          obj.Vaccine1 = (\n            (data[stateCode]?.total?.vaccinated1 /\n              data[stateCode]?.meta.population) *\n            100\n          ).toFixed(2);\n          obj.Vaccine2 = (\n            (data[stateCode]?.total?.vaccinated2 /\n              data[stateCode]?.meta.population) *\n            100\n          ).toFixed(2);\n          obj.count1 = data[stateCode]?.total?.vaccinated1;\n          obj.count2 = data[stateCode]?.total?.vaccinated2;\n          obj.Date = data[stateCode]?.meta?.date ?? '';\n          if (obj.Vaccine1 > 100) {\n            obj.Vaccine1 = 100;\n          }\n          if (obj.Vaccine2 > 100) {\n            obj.Vaccine2 = 100;\n          }\n          if (\n            obj.Vaccine1 &&\n            obj.Vaccine2 &&\n            obj.Vaccine1 <= 100 &&\n            obj.Vaccine2 <= 100\n          ) {\n            details.push(obj);\n          }\n        }\n      } else {\n        Object.keys(data[stateCode].districts).forEach((district) => {\n          if (\n            data[stateCode].districts?.[district]?.total?.vaccinated1 &&\n            data[stateCode].districts?.[district]?.total?.vaccinated2 &&\n            data[stateCode].districts?.[district]?.meta?.population\n          ) {\n            let vaccine1 = (\n              (data[stateCode].districts?.[district]?.total?.vaccinated1 /\n                data[stateCode].districts?.[district]?.meta?.population) *\n              100\n            ).toFixed(2);\n            let vaccine2 = (\n              (data[stateCode].districts?.[district]?.total?.vaccinated2 /\n                data[stateCode].districts?.[district]?.meta?.population) *\n              100\n            ).toFixed(2);\n            if (vaccine1 > 100) {\n              vaccine1 = 100;\n            }\n            if (vaccine2 > 100) {\n              vaccine2 = 100;\n            }\n            if (vaccine1 && vaccine2 && vaccine1 <= 100 && vaccine2 <= 100) {\n              details.push({\n                Vaccine1: vaccine1 ?? 0,\n                Vaccine2: vaccine2 ?? 0,\n                count1:\n                  data[stateCode].districts?.[district]?.total?.vaccinated1,\n                count2:\n                  data[stateCode].districts?.[district]?.total?.vaccinated2,\n                Name: district,\n                Date: data[stateCode]?.meta?.date ?? '',\n              });\n            }\n          }\n        });\n      }\n      scatter(details);\n    }\n\n    // scatter([\n    //     {\n    // \"Time\": 300000,\n    // \"Place\": 10000,\n    // \"Seconds\": 2210,\n    // \"Name\": \"Marco Pantani\",\n    // \"Year\": 1995,\n    // \"Nationality\": \"ITA\",\n    // \"Doping\": \"Alleged drug use during 1995 due to high hematocrit levels\",\n    // \"URL\": \"https://en.wikipedia.org/wiki/Marco_Pantani#Alleged_drug_use\"\n    //   },\n    //           {\n    // \"Time\": 3504,\n    // \"Place\": 3300,\n    // \"Seconds\": 2210,\n    // \"Name\": \"Marco Pantani\",\n    // \"Year\": 1995,\n    // \"Nationality\": \"ITA\",\n    // \"Doping\": \"Alleged drug use during 1995 due to high hematocrit levels\",\n    // \"URL\": \"https://en.wikipedia.org/wiki/Marco_Pantani#Alleged_drug_use\"\n    //   },\n    // {\n    // \"Time\": 55,\n    // \"Place\": 100,\n    // \"Seconds\": 2210,\n    // \"Name\": \"Marco Pantani\",\n    // \"Year\": 1995,\n    // \"Nationality\": \"ITA\",\n    // \"Doping\": \"Alleged drug use during 1995 due to high hematocrit levels\",\n    // \"URL\": \"https://en.wikipedia.org/wiki/Marco_Pantani#Alleged_drug_use\"\n    // },\n    //   ]);\n  }, [regionHighlighted.stateCode, stateCode, stateData, data]);\n\n  const toggleShowAllDistricts = () => {\n    setShowAllDistricts(!showAllDistricts);\n  };\n\n  const handleSort = (districtNameA, districtNameB) => {\n    const districtA = stateData.districts[districtNameA];\n    const districtB = stateData.districts[districtNameB];\n    return (\n      getStatistic(districtB, 'total', mapStatistic) -\n      getStatistic(districtA, 'total', mapStatistic)\n    );\n  };\n\n  const gridRowCount = useMemo(() => {\n    if (!stateData) return;\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = stateData?.districts\n      ? Object.keys(stateData.districts).filter(\n          (districtName) => districtName !== 'Unknown'\n        ).length\n      : 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  }, [stateData]);\n\n  const stateMetaElement = useRef();\n  const isStateMetaVisible = useIsVisible(stateMetaElement);\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const lookback = showAllDistricts ? (window.innerWidth >= 540 ? 10 : 8) : 6;\n\n  const lastDataDate = useMemo(() => {\n    const updatedDates = [\n      stateData?.meta?.date,\n      stateData?.meta?.tested?.date,\n      stateData?.meta?.vaccinated?.date,\n    ].filter((date) => date);\n    return updatedDates.length > 0\n      ? formatISO(max(updatedDates.map((date) => parseIndiaDate(date))), {\n          representation: 'date',\n        })\n      : null;\n  }, [stateData]);\n\n  const primaryStatistic = MAP_STATISTICS.includes(mapStatistic)\n    ? mapStatistic\n    : 'confirmed';\n\n  const noDistrictData = useMemo(() => {\n    // Heuristic: All cases are in Unknown\n    return !!(\n      stateData?.districts &&\n      stateData.districts?.[UNKNOWN_DISTRICT_KEY] &&\n      PRIMARY_STATISTICS.every(\n        (statistic) =>\n          getStatistic(stateData, 'total', statistic) ===\n          getStatistic(\n            stateData.districts[UNKNOWN_DISTRICT_KEY],\n            'total',\n            statistic\n          )\n      )\n    );\n  }, [stateData]);\n\n  const statisticConfig = STATISTIC_CONFIGS[primaryStatistic];\n\n  const noRegionHighlightedDistrictData =\n    regionHighlighted?.districtName &&\n    regionHighlighted.districtName !== UNKNOWN_DISTRICT_KEY &&\n    noDistrictData;\n\n  const districts = Object.keys(\n    ((!noDistrictData || !statisticConfig.hasPrimary) &&\n      stateData?.districts) ||\n      {}\n  );\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Coronavirus Outbreak in {STATE_NAMES[stateCode]} - incovid19.org\n        </title>\n        <meta\n          name=\"title\"\n          content={`Coronavirus Outbreak in ${STATE_NAMES[stateCode]}: Latest Map and Case Count`}\n        />\n      </Helmet>\n\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <StateHeader data={stateData} stateCode={stateCode} />\n\n          <div style={{position: 'relative'}}>\n            <MapSwitcher {...{mapStatistic, setMapStatistic}} />\n            <Level data={stateData} />\n            <Minigraphs\n              timeseries={timeseries?.[stateCode]?.dates}\n              {...{stateCode}}\n              forceRender={!!timeseriesResponseError}\n            />\n          </div>\n\n          {stateData?.total?.vaccinated1 && (\n            <VaccinationHeader data={stateData} />\n          )}\n\n          {data && (\n            <Suspense fallback={<div style={{minHeight: '50rem'}} />}>\n              <MapExplorer\n                {...{\n                  stateCode,\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  mapStatistic,\n                  setMapStatistic,\n                  lastDataDate,\n                  delta7Mode,\n                  setDelta7Mode,\n                  noRegionHighlightedDistrictData,\n                  noDistrictData,\n                }}\n              ></MapExplorer>\n            </Suspense>\n          )}\n\n          <span ref={stateMetaElement} />\n\n          {isStateMetaVisible && data && (\n            <Suspense fallback={<div />}>\n              <StateMeta\n                {...{\n                  stateCode,\n                  data,\n                }}\n                timeseries={timeseries?.[stateCode]?.dates}\n              />\n            </Suspense>\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          <>\n            <div className=\"district-bar\">\n              <div\n                className={classnames('district-bar-top', {\n                  expanded: showAllDistricts,\n                })}\n              >\n                <div className=\"district-bar-left\">\n                  <h2\n                    className={classnames(primaryStatistic, 'fadeInUp')}\n                    style={trail[0]}\n                  >\n                    {t('Top districts')}\n                  </h2>\n                  <div\n                    className={`districts fadeInUp ${\n                      showAllDistricts ? 'is-grid' : ''\n                    }`}\n                    style={\n                      showAllDistricts\n                        ? {\n                            gridTemplateRows: `repeat(${gridRowCount}, 2rem)`,\n                            ...trail[1],\n                          }\n                        : trail[1]\n                    }\n                  >\n                    {districts\n                      .filter((districtName) => districtName !== 'Unknown')\n                      .sort((a, b) => handleSort(a, b))\n                      .slice(0, showAllDistricts ? undefined : 5)\n                      .map((districtName) => {\n                        const total = getStatistic(\n                          stateData.districts[districtName],\n                          'total',\n                          primaryStatistic\n                        );\n                        const delta = getStatistic(\n                          stateData.districts[districtName],\n                          'delta',\n                          primaryStatistic\n                        );\n                        return (\n                          <div key={districtName} className=\"district\">\n                            <h2>{formatNumber(total)}</h2>\n                            <h5>{t(districtName)}</h5>\n                            {primaryStatistic !== 'active' && (\n                              <div className=\"delta\">\n                                <h6 className={primaryStatistic}>\n                                  {delta > 0\n                                    ? '\\u2191' + formatNumber(delta)\n                                    : ''}\n                                </h6>\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n\n                <div className=\"district-bar-right fadeInUp\" style={trail[2]}>\n                  {timeseries &&\n                    (primaryStatistic === 'confirmed' ||\n                      primaryStatistic === 'deceased') && (\n                      <div className=\"happy-sign\">\n                        {Object.keys(timeseries[stateCode]?.dates || {})\n                          .slice(-lookback)\n                          .every(\n                            (date) =>\n                              getStatistic(\n                                timeseries[stateCode].dates[date],\n                                'delta',\n                                primaryStatistic\n                              ) === 0\n                          ) && (\n                          <div\n                            className={`alert ${\n                              primaryStatistic === 'confirmed' ? 'is-green' : ''\n                            }`}\n                          >\n                            <SmileyIcon />\n                            <div className=\"alert-right\">\n                              No new {primaryStatistic} cases in the past five\n                              days\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  <DeltaBarGraph\n                    timeseries={timeseries?.[stateCode]?.dates}\n                    statistic={primaryStatistic}\n                    {...{stateCode, lookback}}\n                    forceRender={!!timeseriesResponseError}\n                  />\n                </div>\n              </div>\n\n              <div className=\"district-bar-bottom\">\n                {districts.length > 5 ? (\n                  <button\n                    className=\"button fadeInUp\"\n                    onClick={toggleShowAllDistricts}\n                    style={trail[3]}\n                  >\n                    <span>\n                      {t(showAllDistricts ? 'View less' : 'View all')}\n                    </span>\n                  </button>\n                ) : (\n                  <div style={{height: '3.75rem', flexBasis: '15%'}} />\n                )}\n              </div>\n            </div>\n\n            <Suspense fallback={<div />}>\n              <TimeseriesExplorer\n                {...{\n                  stateCode,\n                  timeseries,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  noRegionHighlightedDistrictData,\n                }}\n                forceRender={!!timeseriesResponseError}\n              />\n              <div id=\"scatterplot-stats\">\n                <h1 lassName=\"text-center \">{t('Vaccination Coverage')}</h1>\n              </div>\n            </Suspense>\n          </>\n        </div>\n      </div>\n      {/* <div className=\"chartflex\">\n        <div className=\"flex1\">&nbsp;</div> */}\n      <div></div>\n      {/* </div> */}\n      <Footer />\n    </>\n  );\n}\n\nexport default memo(State);\n"],"sourceRoot":""}