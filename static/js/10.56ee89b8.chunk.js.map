{"version":3,"sources":["../node_modules/react-use/esm/useClickAway.js","components/StateDropdown.js","components/StateHeader.js"],"names":["defaultEvents","useClickAway","ref","onClickAway","events","savedCallback","useRef","useEffect","current","handler","event","el","contains","target","_i","events_1","length","eventName","on","document","events_2","off","StateDropdown","stateCode","trail","useState","showDropdown","setShowDropdown","dropdownRef","history","useHistory","t","useTranslation","transitions","useTransition","from","opacity","transform","zIndex","enter","leave","config","mass","tension","friction","handleClick","useCallback","stateCodeItr","push","className","h1","classnames","expanded","style","onClick","bind","STATE_NAMES","item","div","Object","keys","MAP_META","filter","sort","code1","code2","localeCompare","map","StateHeader","data","useMemo","styles","element","index","animationDelay","spring","useSpring","total","getStatistic","SPRING_CONFIG_NUMBERS","hyperlink","meta","formatDate","last_updated","h2","to","formatNumber","tested","date","source","href","memo"],"mappings":"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","file":"static/js/10.56ee89b8.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { off, on } from './misc/util';\nvar defaultEvents = ['mousedown', 'touchstart'];\nvar useClickAway = function (ref, onClickAway, events) {\n    if (events === void 0) { events = defaultEvents; }\n    var savedCallback = useRef(onClickAway);\n    useEffect(function () {\n        savedCallback.current = onClickAway;\n    }, [onClickAway]);\n    useEffect(function () {\n        var handler = function (event) {\n            var el = ref.current;\n            el && !el.contains(event.target) && savedCallback.current(event);\n        };\n        for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n            var eventName = events_1[_i];\n            on(document, eventName, handler);\n        }\n        return function () {\n            for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n                var eventName = events_2[_i];\n                off(document, eventName, handler);\n            }\n        };\n    }, [events, ref]);\n};\nexport default useClickAway;\n","import {MAP_META, STATE_NAMES} from '../constants';\n\nimport classnames from 'classnames';\nimport {useState, useCallback, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useTransition, animated} from 'react-spring';\nimport {useClickAway} from 'react-use';\n\nconst StateDropdown = ({stateCode, trail}) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const dropdownRef = useRef();\n  const history = useHistory();\n  const {t} = useTranslation();\n\n  useClickAway(dropdownRef, () => {\n    setShowDropdown(false);\n  });\n\n  const transitions = useTransition(showDropdown, {\n    from: {\n      opacity: 0,\n      transform: 'translate3d(0, 2px, 0)',\n      zIndex: 999,\n    },\n    enter: {\n      opacity: 1,\n      transform: 'translate3d(0, 0px, 0)',\n      zIndex: 999,\n    },\n    leave: {\n      opacity: 0,\n      transform: 'translate3d(0, 2px, 0)',\n      zIndex: 999,\n    },\n    config: {\n      mass: 1,\n      tension: 210,\n      friction: 20,\n    },\n  });\n\n  const handleClick = useCallback(\n    (stateCodeItr) => {\n      setShowDropdown(false);\n      history.push(`/state/${stateCodeItr}`);\n    },\n    [history]\n  );\n\n  return (\n    <div className=\"StateDropdown\" ref={dropdownRef}>\n      <animated.h1\n        className={classnames('state-name', 'fadeInUp', {\n          expanded: showDropdown,\n        })}\n        style={trail}\n        onClick={setShowDropdown.bind(this, !showDropdown)}\n      >\n        {t(STATE_NAMES[stateCode])}\n      </animated.h1>\n\n      {transitions(\n        (style, item) =>\n          item && (\n            <animated.div className=\"dropdown\" {...{style}}>\n              {Object.keys(MAP_META)\n                .filter(\n                  (stateCodeItr) =>\n                    stateCodeItr !== 'TT' && stateCodeItr !== stateCode\n                )\n                .sort((code1, code2) =>\n                  STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\n                )\n                .map((stateCodeItr) => (\n                  <h1\n                    key={stateCodeItr}\n                    className=\"item\"\n                    onClick={handleClick.bind(this, stateCodeItr)}\n                  >\n                    {t(STATE_NAMES[stateCodeItr])}\n                  </h1>\n                ))}\n            </animated.div>\n          )\n      )}\n\n      {showDropdown && <div className=\"backdrop\"></div>}\n    </div>\n  );\n};\n\nexport default StateDropdown;\n","import StateDropdown from './StateDropdown';\n\nimport {SPRING_CONFIG_NUMBERS} from '../constants.js';\nimport {formatDate, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport {memo, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring} from 'react-spring';\n\nfunction StateHeader({data, stateCode}) {\n  const {t} = useTranslation();\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n\n    return styles;\n  }, []);\n\n  const spring = useSpring({\n    total: getStatistic(data, 'total', 'tested'),\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  return (\n    <div className=\"StateHeader\">\n      <div className=\"header-left\">\n        <StateDropdown {...{stateCode}} hyperlink={false} trail={trail[0]} />\n        {data?.meta?.['last_updated'] && (\n          <h5 className=\"fadeInUp\" style={trail[1]}>\n            {`${t('Last Updated on')} ${formatDate(\n              data.meta.last_updated,\n              'dd MMM, p'\n            )} ${t('IST')}`}\n          </h5>\n        )}\n      </div>\n\n      <div className=\"header-right fadeInUp\" style={trail[2]}>\n        <h5>{t('Tested')}</h5>\n        <animated.h2>\n          {spring.total.to((total) => formatNumber(total, 'long', 'tested'))}\n        </animated.h2>\n        {data?.meta?.tested?.date && (\n          <h5 className=\"timestamp\">\n            {`${t('As of')} ${formatDate(data.meta.tested.date, 'dd MMMM')}`}\n          </h5>\n        )}\n        {data?.meta?.tested?.source && (\n          <h5>\n            {`${t('per')} `}\n            <a href={data.meta.tested.source} target=\"_noblank\">\n              {t('source')}\n            </a>\n          </h5>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StateHeader);\n"],"sourceRoot":""}