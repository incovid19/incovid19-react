{"version":3,"sources":["../node_modules/react-use/esm/useIsomorphicLayoutEffect.js","../node_modules/react-use/esm/useMeasure.js","components/MapSwitcher.js"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","defaultState","x","y","width","height","top","left","bottom","right","window","ResizeObserver","_a","useState","element","ref","_b","rect","setRect","observer","useMemo","entries","contentRect","top_1","observe","disconnect","noop","MapSwitcher","mapStatistic","setMapStatistic","useMeasure","mapSwitcher","clicked","setClicked","count","setCount","isPresent","LEVEL_STATISTICS","indexOf","useSpring","opacity","background","STATISTIC_CONFIGS","color","transform","length","config","gentle","spring","springApi","ReactDOM","unstable_batchedUpdates","start","delay","onStart","bind","onRest","handleClick","useCallback","statistic","prevCount","className","div","style","map","index","classnames","onClick","isEqual","prevProps","currProps","memo"],"mappings":"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","file":"static/js/36.e5b450c6.chunk.js","sourcesContent":["import { useEffect, useLayoutEffect } from 'react';\nimport { isBrowser } from './misc/util';\nvar useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n","import { useMemo, useState } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { isBrowser, noop } from './misc/util';\nvar defaultState = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\nfunction useMeasure() {\n    var _a = useState(null), element = _a[0], ref = _a[1];\n    var _b = useState(defaultState), rect = _b[0], setRect = _b[1];\n    var observer = useMemo(function () {\n        return new window.ResizeObserver(function (entries) {\n            if (entries[0]) {\n                var _a = entries[0].contentRect, x = _a.x, y = _a.y, width = _a.width, height = _a.height, top_1 = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n                setRect({ x: x, y: y, width: width, height: height, top: top_1, left: left, bottom: bottom, right: right });\n            }\n        });\n    }, []);\n    useIsomorphicLayoutEffect(function () {\n        if (!element)\n            return;\n        observer.observe(element);\n        return function () {\n            observer.disconnect();\n        };\n    }, [element]);\n    return [ref, rect];\n}\nexport default isBrowser && typeof window.ResizeObserver !== 'undefined'\n    ? useMeasure\n    : (function () { return [noop, defaultState]; });\n","import {LEVEL_STATISTICS, STATISTIC_CONFIGS} from '../constants';\r\n\r\nimport classnames from 'classnames';\r\nimport {memo, useState, useCallback, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {useSpring, animated, config} from 'react-spring';\r\nimport {useMeasure} from 'react-use';\r\n\r\nconst MapSwitcher = ({mapStatistic, setMapStatistic}) => {\r\n  const [mapSwitcher, {width}] = useMeasure();\r\n  const [clicked, setClicked] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const isPresent = LEVEL_STATISTICS.indexOf(mapStatistic) >= 0;\r\n\r\n  const [spring, springApi] = useSpring(() => ({\r\n    opacity: 0,\r\n    background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\r\n    transform: isPresent\r\n      ? `translate3d(${\r\n          (width * LEVEL_STATISTICS.indexOf(mapStatistic)) /\r\n          LEVEL_STATISTICS.length\r\n        }px, 0, 0)`\r\n      : null,\r\n    width: `calc(${100 / LEVEL_STATISTICS.length}%)`,\r\n    config: config.gentle,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (width > 0) {\r\n      const isPresent = LEVEL_STATISTICS.indexOf(mapStatistic) >= 0;\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n        springApi.start({\r\n          transform: isPresent\r\n            ? `translate3d(${\r\n                (width * LEVEL_STATISTICS.indexOf(mapStatistic)) /\r\n                LEVEL_STATISTICS.length\r\n              }px, 0, 0)`\r\n            : null,\r\n          opacity: isPresent ? 1 : 0,\r\n          background: isPresent\r\n            ? `${STATISTIC_CONFIGS[mapStatistic]?.color}20`\r\n            : null,\r\n          delay: count === 0 ? 1500 : 0,\r\n          onStart: setClicked.bind(this, true),\r\n          onRest: setClicked.bind(this, false),\r\n        });\r\n      });\r\n    }\r\n  }, [count, mapStatistic, springApi, width]);\r\n\r\n  const handleClick = useCallback(\r\n    (statistic) => {\r\n      setCount((prevCount) => prevCount + 1);\r\n      setMapStatistic(statistic);\r\n    },\r\n    [setMapStatistic]\r\n  );\r\n\r\n  return (\r\n    <div className=\"MapSwitcher\" ref={mapSwitcher}>\r\n      <animated.div className=\"highlight\" style={spring}></animated.div>\r\n\r\n      {LEVEL_STATISTICS.map((statistic, index) => (\r\n        <div\r\n          key={index}\r\n          className={classnames('clickable', {[`is-${statistic}`]: !clicked})}\r\n          onClick={handleClick.bind(this, statistic)}\r\n          style={{width: `calc(${100 / LEVEL_STATISTICS.length}%)`}}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (prevProps.mapStatistic !== currProps.mapStatistic) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default memo(MapSwitcher, isEqual);\r\n"],"sourceRoot":""}