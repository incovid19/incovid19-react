{"version":3,"sources":["constants.js","utils/commonFunctions.js","serviceWorker.js","i18n/index.js","index.js"],"names":["API_DOMAIN","DATA_API_ROOT","API_REFRESH_INTERVAL","LOCALE_SHORTHANDS","english","hindi","telugu","kannada","gujarati","marathi","tamil","bengali","punjabi","malayalam","odiya","STATISTIC_CONFIGS","confirmed","displayName","color","format","showDelta","hasPrimary","active","recovered","deceased","vaccinated","hideZero","category","vaccinated1","vaccinated2","vaccinated3","other","tableConfig","notes","tested","tpr","nonLinear","onlyDelta7","cfr","recoveryRatio","hide","activeRatio","caseGrowth","canBeInfinite","mapConfig","transformFn","val","colorScale","scaleOrdinal","population","spike","PRIMARY_STATISTICS","LEVEL_STATISTICS","TABLE_STATISTICS","TABLE_STATISTICS_EXPANDED","Object","keys","filter","statistic","MAP_STATISTICS","TIMESERIES_STATISTICS","BRUSH_STATISTICS","UPDATES_COUNT","DISTRICT_TABLE_COUNT","D3_TRANSITION_DURATION","MINIGRAPH_LOOKBACK_DAYS","TESTED_EXPIRING_DAYS","UNASSIGNED_STATE_CODE","UNKNOWN_DISTRICT_KEY","DISTRICT_START_DATE","DISTRICT_TEST_END_DATE","ISO_DATE_REGEX","INDIA_ISO_SUFFIX","SPRING_CONFIG_NUMBERS","clamp","precision","TIMESERIES_CHART_TYPES","total","delta","TIMESERIES_LOOKBACK_DAYS","MAP_VIZS","CHOROPLETH","BUBBLE","SPIKE","MAP_VIEWS","STATES","DISTRICTS","MAP_TYPES","COUNTRY","STATE","MAPS_DIR","MAP_META","AP","geoDataFile","mapType","AR","AS","BR","CT","GA","GJ","HR","HP","JK","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","LA","LD","PY","TT","MAP_DIMENSIONS","MAP_LEGEND_HEIGHT","STATE_NAMES","stateCodes","stateCodesMap","map","key","index","push","code","name","STATE_CODES","STATE_CODES_ARRAY","locale","numberFormatter","Intl","NumberFormat","maximumFractionDigits","isDevelopmentOrTest","getIndiaDate","utcToZonedTime","Date","getIndiaDateISO","formatISO","representation","getIndiaDateYesterdayISO","subDays","formatLastUpdated","unformattedDate","trim","indexOf","replace","slice","then","localePackage","i18n","language","window","localStorage","i18nextLng","formatDistance","parseIndiaDate","match","formatDate","formatString","date","formatDateObjIndia","dateObj","abbreviateNumber","number","numberCleaned","Math","round","abs","floor","formatNumber","value","option","isNaN","capitalize","s","charAt","toUpperCase","toTitleCase","str","txt","substr","toLowerCase","getStatistic","data","type","expiredDate","normalizedByPopulationPer","movingAverage","canBeNaN","meta","differenceInDays","multiplyFactor","dose1","dose2","dose3","confirmedDeltaLastWeek","delta7","confirmedDeltaTwoWeeksAgo","delta21_14","statisticConfig","result","isFinite","fetcher","url","fetch","response","json","retry","fn","retriesLeft","interval","Promise","resolve","reject","catch","error","setTimeout","length","width","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","use","Backend","LanguageDetector","initReactI18next","init","debug","keySeparator","returnEmptyString","fallbackLng","load","backend","loadPath","addPath","saveMissing","interpolation","escapeValue","App","lazy","rootElement","document","getElementById","main","render","fallback","requestIdleCallback","IntersectionObserver","src","done","js","createElement","onload","onerror","Error","head","appendChild","loadScript","URL","process","href","origin","addEventListener","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.951a0527.chunk.js","sourcesContent":["import { scaleOrdinal } from 'd3-scale';\r\nexport const API_DOMAIN = 'https://data.incovid19.org';\r\n\r\nexport const DATA_API_ROOT = `https://data.incovid19.org/v4/min`;\r\nexport const API_REFRESH_INTERVAL = 100000; // seconds\r\n\r\nexport const LOCALE_SHORTHANDS = {\r\n  english: 'en-US',\r\n  hindi: 'hi',\r\n  telugu: 'te',\r\n  kannada: 'en-US',\r\n  gujarati: 'gu',\r\n  marathi: 'en-US',\r\n  tamil: 'ta',\r\n  bengali: 'bn',\r\n  punjabi: 'en-US',\r\n  malayalam: 'en-US',\r\n  odiya: 'en-US',\r\n};\r\n\r\nexport const STATISTIC_CONFIGS = {\r\n  confirmed: {\r\n    displayName: 'confirmed',\r\n    color: '#ff073a',\r\n    format: 'long',\r\n    showDelta: true,\r\n    hasPrimary: true,\r\n  },\r\n  active: {\r\n    displayName: 'active',\r\n    color: '#007bff',\r\n    format: 'long',\r\n    hasPrimary: true,\r\n    showDelta: true,\r\n  },\r\n  recovered: {\r\n    displayName: 'recovered',\r\n    color: '#28a745',\r\n    format: 'long',\r\n    showDelta: true,\r\n    hasPrimary: true,\r\n  },\r\n  deceased: {\r\n    displayName: 'deceased',\r\n    color: '#6c757d',\r\n    format: 'long',\r\n    showDelta: true,\r\n    hasPrimary: true,\r\n  },\r\n  vaccinated: {\r\n    displayName: 'vaccine doses administered',\r\n    color: '#fb5581',\r\n    format: 'short',\r\n    showDelta: true,\r\n    hideZero: true,\r\n    category: 'vaccinated',\r\n  },\r\n  vaccinated1: {\r\n    displayName: 'vaccinated (at least one dose)',\r\n    color: '#fb5581',\r\n    format: 'short',\r\n    showDelta: true,\r\n    hideZero: true,\r\n    category: 'vaccinated',\r\n  },\r\n  vaccinated2: {\r\n    displayName: 'fully vaccinated',\r\n    color: '#fb5581',\r\n    format: 'short',\r\n    showDelta: true,\r\n    hideZero: true,\r\n    category: 'vaccinated',\r\n  },\r\n  vaccinated3: {\r\n    displayName: 'precaution dose',\r\n    color: '#fb5581',\r\n    format: 'short',\r\n    showDelta: true,\r\n    hideZero: true,\r\n    category: 'vaccinated',\r\n  },\r\n  other: {\r\n    displayName: 'other',\r\n    format: 'long',\r\n    color: '#fd7e14',\r\n    showDelta: true,\r\n    tableConfig: {\r\n      notes: 'Migrated cases or non-COVID deaths',\r\n    },\r\n    hasPrimary: true,\r\n  },\r\n  tested: {\r\n    displayName: 'tested',\r\n    color: '#4b1eaa',\r\n    format: 'short',\r\n    showDelta: true,\r\n    hideZero: true,\r\n    category: 'tested',\r\n  },\r\n  tpr: {\r\n    displayName: 'test positivity ratio',\r\n    format: '%',\r\n    color: '#fd7e14',\r\n    nonLinear: true,\r\n    onlyDelta7: true,\r\n    hideZero: true,\r\n    category: 'tested',\r\n    tableConfig: {\r\n      notes: 'Calculated over last 7 days',\r\n    },\r\n    hasPrimary: true,\r\n  },\r\n  cfr: {\r\n    displayName: 'case fatality ratio',\r\n    format: '%',\r\n    color: '#fd7e14',\r\n    nonLinear: true,\r\n    hasPrimary: true,\r\n  },\r\n  recoveryRatio: {\r\n    displayName: 'recovery ratio',\r\n    format: '%',\r\n    nonLinear: true,\r\n    tableConfig: {\r\n      hide: true,\r\n    },\r\n    hasPrimary: true,\r\n  },\r\n  activeRatio: {\r\n    displayName: 'active ratio',\r\n    format: '%',\r\n    nonLinear: true,\r\n    tableConfig: {\r\n      hide: true,\r\n    },\r\n    hasPrimary: true,\r\n  },\r\n  caseGrowth: {\r\n    displayName: 'Case Growth',\r\n    format: '%',\r\n    nonLinear: true,\r\n    canBeInfinite: true,\r\n    tableConfig: {\r\n      notes:\r\n        'Percentage growth of cases last week compared to the week a fortnight ago',\r\n    },\r\n    hasPrimary: true,\r\n    mapConfig: {\r\n      transformFn: (val) => {\r\n        if (val <= 0) return '≤ 0%';\r\n        else if (val <= 20) return '0 - 20%';\r\n        else if (val <= 50) return '20 - 50%';\r\n        else if (val > 50) return '> 50%';\r\n      },\r\n      colorScale: scaleOrdinal(\r\n        ['≤ 0%', '0 - 20%', '20 - 50%', '> 50%'],\r\n        ['#1a9850', '#fee08b', '#fc8d59', '#d73027']\r\n      ),\r\n    },\r\n  },\r\n  population: {\r\n    displayName: 'population',\r\n    format: 'short',\r\n    color: '#b6854d',\r\n    hideZero: true,\r\n    mapConfig: {\r\n      spike: true,\r\n    },\r\n  },\r\n};\r\n\r\nexport const PRIMARY_STATISTICS = [\r\n  'confirmed',\r\n  'active',\r\n  'recovered',\r\n  'deceased',\r\n];\r\n\r\nexport const LEVEL_STATISTICS = [...PRIMARY_STATISTICS];\r\n\r\nexport const TABLE_STATISTICS = [\r\n  ...PRIMARY_STATISTICS,\r\n  'vaccinated',\r\n  'vaccinated1',\r\n  'vaccinated2',\r\n];\r\n\r\nexport const TABLE_STATISTICS_EXPANDED = Object.keys(STATISTIC_CONFIGS).filter(\r\n  (statistic) => !STATISTIC_CONFIGS[statistic]?.tableConfig?.hide\r\n);\r\n\r\nexport const MAP_STATISTICS = [...PRIMARY_STATISTICS];\r\n\r\nexport const TIMESERIES_STATISTICS = [\r\n  ...PRIMARY_STATISTICS,\r\n  'vaccinated',\r\n  'tested',\r\n  'tpr',\r\n];\r\n\r\nexport const BRUSH_STATISTICS = ['confirmed'];\r\n\r\nexport const UPDATES_COUNT = 5;\r\n\r\nexport const DISTRICT_TABLE_COUNT = 40;\r\n\r\nexport const D3_TRANSITION_DURATION = 300;\r\n\r\nexport const MINIGRAPH_LOOKBACK_DAYS = 21;\r\n\r\nexport const TESTED_EXPIRING_DAYS = 7;\r\n\r\nexport const UNASSIGNED_STATE_CODE = 'UN';\r\n\r\nexport const UNKNOWN_DISTRICT_KEY = 'Unknown';\r\n\r\nexport const DISTRICT_START_DATE = '2020-04-26';\r\n\r\nexport const DISTRICT_TEST_END_DATE = '2021-02-02';\r\n\r\nexport const ISO_DATE_REGEX = /^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g;\r\n\r\nexport const INDIA_ISO_SUFFIX = 'T00:00:00+05:30';\r\n\r\nexport const SPRING_CONFIG_NUMBERS = { clamp: true, precision: 1 };\r\n\r\nexport const TIMESERIES_CHART_TYPES = {\r\n  total: 'Cumulative',\r\n  delta: 'Daily',\r\n};\r\n\r\nexport const TIMESERIES_LOOKBACK_DAYS = [null, 90, 30];\r\n\r\nexport const MAP_VIZS = {\r\n  CHOROPLETH: 0,\r\n  BUBBLE: 1,\r\n  SPIKE: 2,\r\n};\r\n\r\nexport const MAP_VIEWS = {\r\n  STATES: 0,\r\n  DISTRICTS: 1,\r\n};\r\n\r\nexport const MAP_TYPES = {\r\n  COUNTRY: 0,\r\n  STATE: 1,\r\n};\r\n\r\nexport const MAPS_DIR =\r\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/projected_maps';\r\n\r\nexport const MAP_META = {\r\n  AP: {\r\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  AR: {\r\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  AS: {\r\n    geoDataFile: `${MAPS_DIR}/assam.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  BR: {\r\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  CT: {\r\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  GA: {\r\n    geoDataFile: `${MAPS_DIR}/goa.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  GJ: {\r\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  HR: {\r\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  HP: {\r\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  JK: {\r\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  JH: {\r\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  KA: {\r\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  KL: {\r\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  MP: {\r\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  MH: {\r\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  MN: {\r\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  ML: {\r\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  MZ: {\r\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  NL: {\r\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  OR: {\r\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  PB: {\r\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  RJ: {\r\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  SK: {\r\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  TN: {\r\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  TG: {\r\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  TR: {\r\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  UT: {\r\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  UP: {\r\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  WB: {\r\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  AN: {\r\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  CH: {\r\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  DN: {\r\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  DL: {\r\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  LA: {\r\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  LD: {\r\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  PY: {\r\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n  },\r\n  TT: {\r\n    geoDataFile: `${MAPS_DIR}/india.json`,\r\n    mapType: MAP_TYPES.COUNTRY,\r\n  },\r\n};\r\n\r\nexport const MAP_DIMENSIONS = [432, 488];\r\nexport const MAP_LEGEND_HEIGHT = 50;\r\n\r\nexport const STATE_NAMES = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n  TT: 'India',\r\n  [UNASSIGNED_STATE_CODE]: 'Unassigned',\r\n};\r\n\r\nconst stateCodes = [];\r\nconst stateCodesMap = {};\r\nObject.keys(STATE_NAMES).map((key, index) => {\r\n  stateCodesMap[STATE_NAMES[key]] = key;\r\n  stateCodes.push({ code: key, name: STATE_NAMES[key] });\r\n  return null;\r\n});\r\nexport const STATE_CODES = stateCodesMap;\r\nexport const STATE_CODES_ARRAY = stateCodes;\r\n","import {\r\n  INDIA_ISO_SUFFIX,\r\n  ISO_DATE_REGEX,\r\n  LOCALE_SHORTHANDS,\r\n  STATISTIC_CONFIGS,\r\n  TESTED_EXPIRING_DAYS,\r\n} from '../constants';\r\n\r\nimport {\r\n  differenceInDays,\r\n  format,\r\n  formatDistance,\r\n  formatISO,\r\n  subDays,\r\n} from 'date-fns';\r\nimport {utcToZonedTime} from 'date-fns-tz';\r\nimport i18n from 'i18next';\r\n\r\nlet locale = null;\r\nconst numberFormatter = new Intl.NumberFormat('en-IN', {\r\n  maximumFractionDigits: 1,\r\n});\r\n\r\nconst getLocale = () => {\r\n  import('date-fns/locale/').then((localePackage) => {\r\n    locale =\r\n      localePackage[\r\n        LOCALE_SHORTHANDS[i18n.language || window.localStorage.i18nextLng]\r\n      ];\r\n  });\r\n};\r\n\r\nexport const isDevelopmentOrTest = () => {\r\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\r\n    return true;\r\n  return false;\r\n};\r\n\r\nexport const getIndiaDate = () => {\r\n  return utcToZonedTime(new Date(), 'Asia/Kolkata');\r\n};\r\n\r\nexport const getIndiaDateISO = () => {\r\n  return formatISO(getIndiaDate(), {representation: 'date'});\r\n};\r\n\r\nexport const getIndiaDateYesterday = () => {\r\n  return subDays(getIndiaDate(), 1);\r\n};\r\n\r\nexport const getIndiaDateYesterdayISO = () => {\r\n  return formatISO(getIndiaDateYesterday(), {representation: 'date'});\r\n};\r\n\r\nexport const formatLastUpdated = (unformattedDate) => {\r\n  if (unformattedDate) {\r\n    if (typeof unformattedDate === 'string') {\r\n      unformattedDate = unformattedDate.trim();\r\n      if (unformattedDate.indexOf(' ') != -1) {\r\n        unformattedDate = unformattedDate.replace(' ', 'T');\r\n        if (unformattedDate.indexOf('.') != -1) {\r\n          unformattedDate = unformattedDate.slice(\r\n            0,\r\n            unformattedDate.indexOf('.')\r\n          );\r\n          unformattedDate += '+05:30';\r\n        }\r\n      }\r\n    }\r\n  }\r\n  getLocale();\r\n  return formatDistance(new Date(unformattedDate), new Date(), {\r\n    locale: locale,\r\n  });\r\n};\r\n\r\nexport const parseIndiaDate = (unformattedDate) => {\r\n  if (!unformattedDate) {\r\n    return getIndiaDate();\r\n  }\r\n  if (typeof unformattedDate === 'string') {\r\n    unformattedDate = unformattedDate.trim();\r\n    if (unformattedDate.indexOf(' ') != -1) {\r\n      unformattedDate = unformattedDate.replace(' ', 'T');\r\n      if (unformattedDate.indexOf('.') != -1) {\r\n        unformattedDate = unformattedDate.slice(\r\n          0,\r\n          unformattedDate.indexOf('.')\r\n        );\r\n        unformattedDate += '+05:30';\r\n      }\r\n    }\r\n  }\r\n\r\n  if (\r\n    typeof unformattedDate === 'string' &&\r\n    unformattedDate.match(ISO_DATE_REGEX)\r\n  ) {\r\n    unformattedDate += INDIA_ISO_SUFFIX;\r\n  }\r\n\r\n  return utcToZonedTime(new Date(unformattedDate), 'Asia/Kolkata');\r\n};\r\n\r\nexport const formatDate = (unformattedDate, formatString) => {\r\n  if (!unformattedDate) return '';\r\n  if (typeof unformattedDate === 'string') {\r\n    unformattedDate = unformattedDate.trim();\r\n    if (unformattedDate.indexOf(' ') != -1) {\r\n      unformattedDate = unformattedDate.replace(' ', 'T');\r\n      if (unformattedDate.indexOf('.') != -1) {\r\n        unformattedDate = unformattedDate.slice(\r\n          0,\r\n          unformattedDate.indexOf('.')\r\n        );\r\n        unformattedDate += '+05:30';\r\n      }\r\n    }\r\n  }\r\n  if (\r\n    typeof unformattedDate === 'string' &&\r\n    unformattedDate.match(ISO_DATE_REGEX)\r\n  )\r\n    unformattedDate += INDIA_ISO_SUFFIX;\r\n  const date = utcToZonedTime(new Date(unformattedDate), 'Asia/Kolkata');\r\n  return format(date, formatString, {\r\n    locale: locale,\r\n  });\r\n};\r\n\r\nexport const formatDateObjIndia = (dateObj) => {\r\n  return format(dateObj, \"yyyy-MM-dd'T'HH:mm:ss+05:30\", {\r\n    locale: locale,\r\n  });\r\n};\r\n\r\nexport const abbreviateNumber = (number) => {\r\n  const numberCleaned = Math.round(Math.abs(number));\r\n  if (numberCleaned < 1e3) return numberFormatter.format(Math.floor(number));\r\n  else if (numberCleaned >= 1e3 && numberCleaned < 1e5)\r\n    return numberFormatter.format(number / 1e3) + 'K';\r\n  else if (numberCleaned >= 1e5 && numberCleaned < 1e7)\r\n    return numberFormatter.format(number / 1e5) + 'L';\r\n  else if (numberCleaned >= 1e7 && numberCleaned < 1e10)\r\n    return numberFormatter.format(number / 1e7) + 'Cr';\r\n  else if (numberCleaned >= 1e10 && numberCleaned < 1e14)\r\n    return numberFormatter.format(number / 1e10) + 'K Cr';\r\n  else if (numberCleaned >= 1e14)\r\n    return numberFormatter.format(number / 1e14) + 'L Cr';\r\n};\r\n\r\nexport const formatNumber = (value, option = '', statistic) => {\r\n  if (\r\n    isNaN(value) ||\r\n    (statistic && STATISTIC_CONFIGS[statistic]?.hideZero && value === 0)\r\n  ) {\r\n    return '-';\r\n  } else if (option === 'long') {\r\n    return numberFormatter.format(\r\n      Math.abs(value) < 1 ? value : Math.round(value)\r\n    );\r\n  } else if (option === 'short') {\r\n    return abbreviateNumber(value);\r\n  } else if (option === '%') {\r\n    return `${numberFormatter.format(value)}%`;\r\n  } else if (option === '') {\r\n    return numberFormatter.format(value);\r\n  }\r\n};\r\n\r\nexport const capitalize = (s) => {\r\n  if (typeof s !== 'string') return '';\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nexport const toTitleCase = (str) => {\r\n  return str.replace(/\\w\\S*/g, function (txt) {\r\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n  });\r\n};\r\n\r\nexport const getStatistic = (\r\n  data,\r\n  type,\r\n  statistic,\r\n  {\r\n    expiredDate = null,\r\n    normalizedByPopulationPer = null,\r\n    movingAverage = false,\r\n    canBeNaN = false,\r\n  } = {}\r\n) => {\r\n  // TODO: Replace delta with daily to remove ambiguity\r\n  //       Or add another type for daily/delta\r\n\r\n  if (expiredDate !== null) {\r\n    if (STATISTIC_CONFIGS[statistic]?.category === 'tested') {\r\n      if (\r\n        !data?.meta?.tested?.date ||\r\n        differenceInDays(\r\n          parseIndiaDate(expiredDate),\r\n          parseIndiaDate(data.meta.tested.date)\r\n        ) > TESTED_EXPIRING_DAYS\r\n      ) {\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  let multiplyFactor = 1;\r\n  if (type === 'delta' && movingAverage) {\r\n    type = 'delta7';\r\n    multiplyFactor *= 1 / 7;\r\n  }\r\n\r\n  if (normalizedByPopulationPer === 'million') {\r\n    multiplyFactor *= 1e6 / data?.meta?.population;\r\n  } else if (normalizedByPopulationPer === 'lakh') {\r\n    multiplyFactor *= 1e5 / data?.meta?.population;\r\n  } else if (normalizedByPopulationPer === 'hundred') {\r\n    multiplyFactor *= 1e2 / data?.meta?.population;\r\n  }\r\n  let val;\r\n  if (statistic === 'active' || statistic === 'activeRatio') {\r\n    const confirmed = data?.[type]?.confirmed || 0;\r\n    const deceased = data?.[type]?.deceased || 0;\r\n    const recovered = data?.[type]?.recovered || 0;\r\n    const other = data?.[type]?.other || 0;\r\n    const active = confirmed - deceased - recovered - other;\r\n    if (recovered === 0) {\r\n      val = 0;\r\n    } else if (statistic === 'active') {\r\n      val = active;\r\n    } else if (statistic === 'activeRatio') {\r\n      val = 100 * (active / confirmed);\r\n    }\r\n  } else if (statistic === 'vaccinated') {\r\n    const dose1 = data?.[type]?.vaccinated1 || 0;\r\n    const dose2 = data?.[type]?.vaccinated2 || 0;\r\n    const dose3 = data?.[type]?.vaccinated3 || 0;\r\n    val = dose1 + dose2 + dose3;\r\n  } else if (statistic === 'tpr') {\r\n    const confirmed = data?.[type]?.confirmed || 0;\r\n    const tested = data?.[type]?.tested || 0;\r\n    val = 100 * (confirmed / tested);\r\n  } else if (statistic === 'cfr') {\r\n    const deceased = data?.[type]?.deceased || 0;\r\n    const confirmed = data?.[type]?.confirmed || 0;\r\n    val = 100 * (deceased / confirmed);\r\n  } else if (statistic === 'recoveryRatio') {\r\n    const recovered = data?.[type]?.recovered || 0;\r\n    const confirmed = data?.[type]?.confirmed || 0;\r\n    val = 100 * (recovered / confirmed);\r\n  } else if (statistic === 'caseGrowth') {\r\n    const confirmedDeltaLastWeek = data?.delta7?.confirmed || 0;\r\n    const confirmedDeltaTwoWeeksAgo = data?.delta21_14?.confirmed || 0;\r\n    val =\r\n      type === 'total'\r\n        ? 100 *\r\n          ((confirmedDeltaLastWeek - confirmedDeltaTwoWeeksAgo) /\r\n            confirmedDeltaTwoWeeksAgo)\r\n        : 0;\r\n  } else if (statistic === 'population') {\r\n    val = type === 'total' ? data?.meta?.population : 0;\r\n  } else {\r\n    val = data?.[type]?.[statistic];\r\n  }\r\n\r\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\r\n  multiplyFactor = (statisticConfig?.nonLinear && 1) || multiplyFactor;\r\n\r\n  let result = multiplyFactor * val;\r\n  if (!canBeNaN) {\r\n    result = (!isNaN(result) && result) || 0;\r\n  }\r\n  if (!statisticConfig?.canBeInfinite) {\r\n    result = ((isNaN(result) || isFinite(result)) && result) || 0;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const fetcher = (url) => {\r\n  return fetch(url).then((response) => {\r\n    return response.json();\r\n  });\r\n};\r\n\r\nexport function retry(fn, retriesLeft = 5, interval = 1000) {\r\n  return new Promise((resolve, reject) => {\r\n    fn()\r\n      .then(resolve)\r\n      .catch((error) => {\r\n        setTimeout(() => {\r\n          if (retriesLeft === 1) {\r\n            // reject('maximum retries exceeded');\r\n            reject(error);\r\n            return;\r\n          }\r\n\r\n          // Passing on \"reject\" is the important part\r\n          retry(fn, retriesLeft - 1, interval).then(resolve, reject);\r\n        }, interval);\r\n      });\r\n  });\r\n}\r\n\r\nexport const spike = (length, width = 8) =>\r\n  `M${-width / 2},0L0,${-length}L${width / 2},0`;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () =>\r\n      setTimeout(() => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n\r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      }, 3000)\r\n    );\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {API_DOMAIN} from '../constants';\r\nimport {isDevelopmentOrTest} from '../utils/commonFunctions';\r\n\r\nimport i18n from 'i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\nconst DEBUG = false;\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    debug: isDevelopmentOrTest() && DEBUG,\r\n    keySeparator: false,\r\n    returnEmptyString: false,\r\n    fallbackLng: 'english',\r\n    load: 'languageOnly',\r\n    backend: {\r\n      loadPath: `${API_DOMAIN}/locales/locale_{{lng}}.json`,\r\n      addPath: 'http://localhost:9999/',\r\n    },\r\n    saveMissing: isDevelopmentOrTest() && DEBUG,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","// import './wdyr';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n';\r\nimport {retry} from './utils/commonFunctions';\r\n\r\nimport {Suspense, lazy, StrictMode} from 'react';\r\nimport {render} from 'react-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst App = lazy(() => retry(() => import('./App')));\r\nconst rootElement = document.getElementById('root');\r\n\r\nconst main = () =>\r\n  render(\r\n    <Suspense fallback={<div />}>\r\n      <Router>\r\n        <StrictMode>\r\n          <App />\r\n        </StrictMode>\r\n      </Router>\r\n    </Suspense>,\r\n    rootElement\r\n  );\r\n\r\nconst browserSupportsAllFeatures = () => {\r\n  return window.requestIdleCallback && window.IntersectionObserver;\r\n};\r\n\r\nconst loadScript = (src, done) => {\r\n  const js = document.createElement('script');\r\n  js.src = src;\r\n  js.onload = function () {\r\n    done();\r\n  };\r\n  js.onerror = function () {\r\n    done(new Error('Failed to load script ' + src));\r\n  };\r\n  document.head.appendChild(js);\r\n};\r\n\r\nif (browserSupportsAllFeatures()) {\r\n  main();\r\n} else {\r\n  loadScript(\r\n    'https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=requestIdleCallback%2CIntersectionObserver',\r\n    main\r\n  );\r\n}\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}