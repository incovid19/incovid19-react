{"version":3,"sources":["../node_modules/d3-array/src/min.js","components/loaders/Timeseries.js","components/TimeseriesExplorer.js","../node_modules/fast-deep-equal/index.js"],"names":["min","values","valueof","undefined","value","index","TimeseriesLoader","windowWidth","window","innerWidth","width","height","viewBox","speed","cx","cy","r","Timeseries","lazy","retry","TimeseriesBrush","TimeseriesExplorer","stateCode","timeseries","timelineDate","date","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","hideVaccinated","noRegionHighlightedDistrictData","t","useTranslation","useLocalStorage","lookback","setLookback","chartType","setChartType","isUniform","setIsUniform","isLog","setIsLog","isMovingAverage","setIsMovingAverage","stateCodeDateRange","Object","keys","dates","beginningDate","getIndiaDateYesterdayISO","endDate","length","useState","brushSelectionEnd","setBrushSelectionEnd","useEffect","brushSelectionStart","formatISO","subDays","parseIndiaDate","representation","explorerElement","useRef","isVisible","useIsVisible","once","useWindowSize","selectedRegion","useMemo","districts","districtName","selectedTimeseries","regions","states","filter","code","sort","code1","code2","STATE_NAMES","localeCompare","map","reduce","acc1","acc2","dropdownRegions","find","region","brushSelectionDates","handleChange","useCallback","target","JSON","parse","resetDropdown","statistics","TIMESERIES_STATISTICS","statistic","STATISTIC_CONFIGS","category","className","classnames","stickied","expanded","style","display","ref","onClick","bind","this","entries","TIMESERIES_CHART_TYPES","ctype","htmlFor","id","type","checked","onChange","disabled","stringify","fallback","currentBrushSelection","animationIndex","animationDelay","TIMESERIES_LOOKBACK_DAYS","numDays","selected","isEqual","prevProps","currProps","forceRender","equal","memo","module","exports","a","b","constructor","i","Array","isArray","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","call","key"],"mappings":"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","file":"static/js/35.66220b12.chunk.js","sourcesContent":["export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import ContentLoader from 'react-content-loader';\r\n\r\nconst TimeseriesLoader = () => {\r\n  const windowWidth = window.innerWidth;\r\n  const width = windowWidth >= 769 ? 480 : windowWidth;\r\n  const height = 200 * 6;\r\n\r\n  return (\r\n    <ContentLoader\r\n      viewBox={`0 0 ${width} ${height}`}\r\n      height={height}\r\n      width={width}\r\n      speed={2}\r\n    >\r\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\r\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\r\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\r\n    </ContentLoader>\r\n  );\r\n};\r\n\r\nexport default TimeseriesLoader;\r\n","import TimeseriesLoader from './loaders/Timeseries';\r\n\r\nimport {\r\n  STATE_NAMES,\r\n  STATISTIC_CONFIGS,\r\n  TIMESERIES_CHART_TYPES,\r\n  TIMESERIES_LOOKBACK_DAYS,\r\n  TIMESERIES_STATISTICS,\r\n} from '../constants';\r\nimport useIsVisible from '../hooks/useIsVisible';\r\nimport {\r\n  getIndiaDateYesterdayISO,\r\n  parseIndiaDate,\r\n  retry,\r\n} from '../utils/commonFunctions';\r\n\r\nimport {PinIcon, ReplyIcon} from '@primer/octicons-react';\r\nimport classnames from 'classnames';\r\nimport {min} from 'd3-array';\r\nimport {formatISO, subDays} from 'date-fns';\r\nimport equal from 'fast-deep-equal';\r\nimport {\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  lazy,\r\n  Suspense,\r\n} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useLocalStorage, useWindowSize} from 'react-use';\r\n\r\nconst Timeseries = lazy(() => retry(() => import('./Timeseries')));\r\nconst TimeseriesBrush = lazy(() => retry(() => import('./TimeseriesBrush')));\r\n\r\nfunction TimeseriesExplorer({\r\n  stateCode,\r\n  timeseries,\r\n  date: timelineDate,\r\n  regionHighlighted,\r\n  setRegionHighlighted,\r\n  anchor,\r\n  setAnchor,\r\n  expandTable = false,\r\n  hideVaccinated = false,\r\n  noRegionHighlightedDistrictData,\r\n}) {\r\n  const {t} = useTranslation();\r\n  const [lookback, setLookback] = useLocalStorage('timeseriesLookbackDays', 90);\r\n  const [chartType, setChartType] = useLocalStorage('chartType', 'delta');\r\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', false);\r\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\r\n  const [isMovingAverage, setIsMovingAverage] = useLocalStorage(\r\n    'isMovingAverage',\r\n    false\r\n  );\r\n\r\n  const stateCodeDateRange = Object.keys(timeseries?.[stateCode]?.dates || {});\r\n  const beginningDate =\r\n    stateCodeDateRange[0] || timelineDate || getIndiaDateYesterdayISO();\r\n  const endDate = min([\r\n    stateCodeDateRange[stateCodeDateRange.length - 1],\r\n    timelineDate || getIndiaDateYesterdayISO(),\r\n  ]);\r\n\r\n  const [brushSelectionEnd, setBrushSelectionEnd] = useState(endDate);\r\n  useEffect(() => {\r\n    setBrushSelectionEnd(endDate);\r\n  }, [endDate]);\r\n\r\n  const brushSelectionStart =\r\n    lookback !== null\r\n      ? formatISO(subDays(parseIndiaDate(brushSelectionEnd), lookback), {\r\n          representation: 'date',\r\n        })\r\n      : beginningDate;\r\n\r\n  const explorerElement = useRef();\r\n  const isVisible = useIsVisible(explorerElement, {once: true});\r\n  const {width} = useWindowSize();\r\n\r\n  const selectedRegion = useMemo(() => {\r\n    if (timeseries?.[regionHighlighted.stateCode]?.districts) {\r\n      return {\r\n        stateCode: regionHighlighted.stateCode,\r\n        districtName: regionHighlighted.districtName,\r\n      };\r\n    } else {\r\n      return {\r\n        stateCode: regionHighlighted.stateCode,\r\n        districtName: null,\r\n      };\r\n    }\r\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\r\n\r\n  const selectedTimeseries = useMemo(() => {\r\n    if (selectedRegion.districtName) {\r\n      return timeseries?.[selectedRegion.stateCode]?.districts?.[\r\n        selectedRegion.districtName\r\n      ]?.dates;\r\n    } else {\r\n      return timeseries?.[selectedRegion.stateCode]?.dates;\r\n    }\r\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\r\n\r\n  const regions = useMemo(() => {\r\n    const states = Object.keys(timeseries || {})\r\n      .filter((code) => code !== stateCode)\r\n      .sort((code1, code2) =>\r\n        STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\r\n      )\r\n      .map((code) => {\r\n        return {\r\n          stateCode: code,\r\n          districtName: null,\r\n        };\r\n      });\r\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\r\n      return [\r\n        ...acc1,\r\n        ...Object.keys(timeseries?.[code]?.districts || {}).reduce(\r\n          (acc2, districtName) => {\r\n            return [\r\n              ...acc2,\r\n              {\r\n                stateCode: code,\r\n                districtName: districtName,\r\n              },\r\n            ];\r\n          },\r\n          []\r\n        ),\r\n      ];\r\n    }, []);\r\n\r\n    return [\r\n      {\r\n        stateCode: stateCode,\r\n        districtName: null,\r\n      },\r\n      ...states,\r\n      ...districts,\r\n    ];\r\n  }, [timeseries, stateCode]);\r\n\r\n  const dropdownRegions = useMemo(() => {\r\n    if (\r\n      regions.find(\r\n        (region) =>\r\n          region.stateCode === regionHighlighted.stateCode &&\r\n          region.districtName === regionHighlighted.districtName\r\n      )\r\n    )\r\n      return regions;\r\n    return [\r\n      ...regions,\r\n      {\r\n        stateCode: regionHighlighted.stateCode,\r\n        districtName: regionHighlighted.districtName,\r\n      },\r\n    ];\r\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\r\n\r\n  const dates = useMemo(\r\n    () =>\r\n      Object.keys(selectedTimeseries || {}).filter((date) => date <= endDate),\r\n    [selectedTimeseries, endDate]\r\n  );\r\n\r\n  const brushSelectionDates = useMemo(\r\n    () =>\r\n      dates.filter(\r\n        (date) => brushSelectionStart <= date && date <= brushSelectionEnd\r\n      ),\r\n    [dates, brushSelectionStart, brushSelectionEnd]\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    ({target}) => {\r\n      setRegionHighlighted(JSON.parse(target.value));\r\n    },\r\n    [setRegionHighlighted]\r\n  );\r\n\r\n  const resetDropdown = useCallback(() => {\r\n    setRegionHighlighted({\r\n      stateCode: stateCode,\r\n      districtName: null,\r\n    });\r\n  }, [stateCode, setRegionHighlighted]);\r\n\r\n  const statistics = useMemo(\r\n    () =>\r\n      TIMESERIES_STATISTICS.filter(\r\n        (statistic) =>\r\n          (!(STATISTIC_CONFIGS[statistic]?.category === 'vaccinated') ||\r\n            !hideVaccinated) &&\r\n          // (chartType === 'total' || statistic !== 'active') &&\r\n          (chartType === 'delta' || statistic !== 'tpr')\r\n      ),\r\n    [chartType, hideVaccinated]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        'TimeseriesExplorer fadeInUp',\r\n        {\r\n          stickied: anchor === 'timeseries',\r\n        },\r\n        {expanded: expandTable}\r\n      )}\r\n      style={{\r\n        display:\r\n          anchor && anchor !== 'timeseries' && (!expandTable || width < 769)\r\n            ? 'none'\r\n            : '',\r\n      }}\r\n      ref={explorerElement}\r\n    >\r\n      <div className=\"timeseries-header\">\r\n        <div\r\n          className={classnames('anchor', 'fadeInUp', {\r\n            stickied: anchor === 'timeseries',\r\n          })}\r\n          style={{\r\n            display: expandTable && width >= 769 ? 'none' : '',\r\n          }}\r\n          onClick={\r\n            setAnchor &&\r\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\r\n          }\r\n        >\r\n          <PinIcon />\r\n        </div>\r\n\r\n        <h1>{t('Spread Trends')}</h1>\r\n        <div className=\"tabs\">\r\n          {Object.entries(TIMESERIES_CHART_TYPES).map(\r\n            ([ctype, value], index) => (\r\n              <div\r\n                className={`tab ${chartType === ctype ? 'focused' : ''}`}\r\n                key={ctype}\r\n                onClick={setChartType.bind(this, ctype)}\r\n              >\r\n                <h4>{t(value)}</h4>\r\n              </div>\r\n            )\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"timeseries-options\">\r\n          <div className=\"scale-modes\">\r\n            <label className=\"main\">{`${t('Scale Modes')}:`}</label>\r\n            <div className=\"timeseries-mode\">\r\n              <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\r\n              <input\r\n                id=\"timeseries-mode\"\r\n                type=\"checkbox\"\r\n                className=\"switch\"\r\n                checked={isUniform}\r\n                aria-label={t('Checked by default to scale uniformly.')}\r\n                onChange={setIsUniform.bind(this, !isUniform)}\r\n              />\r\n            </div>\r\n            <div\r\n              className={`timeseries-mode ${\r\n                chartType !== 'total' ? 'disabled' : ''\r\n              }`}\r\n            >\r\n              <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\r\n              <input\r\n                id=\"timeseries-logmode\"\r\n                type=\"checkbox\"\r\n                checked={chartType === 'total' && isLog}\r\n                className=\"switch\"\r\n                disabled={chartType !== 'total'}\r\n                onChange={setIsLog.bind(this, !isLog)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={`timeseries-mode ${\r\n              chartType === 'total' ? 'disabled' : ''\r\n            } moving-average`}\r\n          >\r\n            <label htmlFor=\"timeseries-moving-average\">\r\n              {t('7 day Moving Average')}\r\n            </label>\r\n            <input\r\n              id=\"timeseries-moving-average\"\r\n              type=\"checkbox\"\r\n              checked={chartType === 'delta' && isMovingAverage}\r\n              className=\"switch\"\r\n              disabled={chartType !== 'delta'}\r\n              onChange={setIsMovingAverage.bind(this, !isMovingAverage)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {dropdownRegions && (\r\n        <div className=\"state-selection\">\r\n          <div className=\"dropdown\">\r\n            <select\r\n              value={JSON.stringify(selectedRegion)}\r\n              onChange={handleChange}\r\n            >\r\n              {dropdownRegions\r\n                .filter(\r\n                  (region) =>\r\n                    STATE_NAMES[region.stateCode] !== region.districtName\r\n                )\r\n                .map((region) => {\r\n                  return (\r\n                    <option\r\n                      value={JSON.stringify(region)}\r\n                      key={`${region.stateCode}-${region.districtName}`}\r\n                    >\r\n                      {region.districtName\r\n                        ? t(region.districtName)\r\n                        : t(STATE_NAMES[region.stateCode])}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"reset-icon\" onClick={resetDropdown}>\r\n            <ReplyIcon />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isVisible && (\r\n        <Suspense fallback={<TimeseriesLoader />}>\r\n          <Timeseries\r\n            timeseries={selectedTimeseries}\r\n            regionHighlighted={selectedRegion}\r\n            dates={brushSelectionDates}\r\n            {...{\r\n              statistics,\r\n              endDate,\r\n              chartType,\r\n              isUniform,\r\n              isLog,\r\n              isMovingAverage,\r\n              noRegionHighlightedDistrictData,\r\n            }}\r\n          />\r\n          <TimeseriesBrush\r\n            timeseries={selectedTimeseries}\r\n            regionHighlighted={selectedRegion}\r\n            currentBrushSelection={[brushSelectionStart, brushSelectionEnd]}\r\n            animationIndex={statistics.length}\r\n            {...{dates, endDate, lookback, setBrushSelectionEnd, setLookback}}\r\n          />\r\n        </Suspense>\r\n      )}\r\n      {!isVisible && <div style={{height: '50rem'}} />}\r\n      <div\r\n        className=\"pills fadeInUp\"\r\n        style={{animationDelay: `${(1 + statistics.length) * 250}ms`}}\r\n      >\r\n        {TIMESERIES_LOOKBACK_DAYS.map((numDays) => (\r\n          <button\r\n            key={numDays}\r\n            type=\"button\"\r\n            className={classnames({\r\n              selected: numDays === lookback,\r\n            })}\r\n            onClick={setLookback.bind(this, numDays)}\r\n          >\r\n            {numDays !== null ? `${numDays} ${t('days')}` : t('Beginning')}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst isEqual = (prevProps, currProps) => {\r\n  if (currProps.forceRender) {\r\n    return false;\r\n  } else if (!currProps.timeseries && prevProps.timeseries) {\r\n    return true;\r\n  } else if (currProps.timeseries && !prevProps.timeseries) {\r\n    return false;\r\n  } else if (\r\n    !equal(\r\n      currProps.regionHighlighted.stateCode,\r\n      prevProps.regionHighlighted.stateCode\r\n    )\r\n  ) {\r\n    return false;\r\n  } else if (\r\n    !equal(\r\n      currProps.regionHighlighted.districtName,\r\n      prevProps.regionHighlighted.districtName\r\n    )\r\n  ) {\r\n    return false;\r\n  } else if (!equal(currProps.date, prevProps.date)) {\r\n    return false;\r\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\r\n    return false;\r\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\r\n    return false;\r\n  } else if (!equal(currProps.hideVaccinated, prevProps.hideVaccinated)) {\r\n    return false;\r\n  } else if (\r\n    !equal(\r\n      currProps.noRegionHighlightedDistrictData,\r\n      prevProps.noRegionHighlightedDistrictData\r\n    )\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default memo(TimeseriesExplorer, isEqual);\r\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}